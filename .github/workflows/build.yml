name: Build Obsidian Plugin

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js
      uses: actions/setup-node@v2
      with:
        node-version: '16.x'

    - name: Clear npm cache
      run: npm cache clean --force

    - name: Display package.json
      run: cat package.json

    - name: Install @types/node
      run: npm install --save-dev @types/node

    - name: Install dependencies
      run: npm ci

    - name: Build plugin
      run: npm run build

    - name: Create plugin directory
      run: |
        mkdir -p redact-and-extract
        cp main.js manifest.json styles.css redact-and-extract/

    - name: Create ZIP file
      run: zip -r redact-and-extract.zip redact-and-extract

    - name: Get version from manifest.json
      id: get_version
      run: echo "::set-output name=version::$(jq -r '.version' manifest.json)"

    - name: Check if release already exists
      id: check_release
      uses: actions/github-script@v6
      with:
        script: |
          const version = '${{ steps.get_version.outputs.version }}';
          const releases = await github.rest.repos.listReleases({
            owner: context.repo.owner,
            repo: context.repo.repo
          });
          const releaseExists = releases.data.some(release => release.tag_name === version);
          return releaseExists;

    - name: Create release
      if: ${{ steps.check_release.outputs.result == 'false' }}
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        tag_name: ${{ steps.get_version.outputs.version }}
        release_name: Release ${{ steps.get_version.outputs.version }}
        draft: false
        prerelease: false

    - name: Upload plugin ZIP
      if: ${{ steps.check_release.outputs.result == 'false' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./redact-and-extract.zip
        asset_name: redact-and-extract.zip
        asset_content_type: application/zip

    - name: Upload main.js
      if: ${{ steps.check_release.outputs.result == 'false' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./main.js
        asset_name: main.js
        asset_content_type: application/javascript
  
    - name: Upload manifest.json
      if: ${{ steps.check_release.outputs.result == 'false' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./manifest.json
        asset_name: manifest.json
        asset_content_type: application/json

    - name: Upload styles.css
      if: ${{ steps.check_release.outputs.result == 'false' }}
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GIT_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./styles.css
        asset_name: styles.css
        asset_content_type: text/css
